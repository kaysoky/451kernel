'\" t
.\"     Title: perf-stat
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/19/2013
.\"    Manual: perf Manual
.\"    Source: perf
.\"  Language: English
.\"
.TH "PERF\-STAT" "1" "03/19/2013" "perf" "perf Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
perf-stat \- Run a command and gather performance counter statistics
.SH "SYNOPSIS"
.sp
.nf
\fIperf stat\fR [\-e <EVENT> | \-\-event=EVENT] [\-a] <command>
\fIperf stat\fR [\-e <EVENT> | \-\-event=EVENT] [\-a] \(em <command> [<options>]
.fi
.SH "DESCRIPTION"
.sp
This command runs a command and gathers performance counter statistics from it\&.
.SH "OPTIONS"
.PP
<command>\&...
.RS 4
Any command you can specify in a shell\&.
.RE
.PP
\-e, \-\-event=
.RS 4
Select the PMU event\&. Selection can be a symbolic event name (use
\fIperf list\fR
to list all events) or a raw PMU event (eventsel+umask) in the form of rNNN where NNN is a hexadecimal event descriptor\&.
.RE
.PP
\-i, \-\-no\-inherit
.RS 4
child tasks do not inherit counters
.RE
.PP
\-p, \-\-pid=<pid>
.RS 4
stat events on existing process id (comma separated list)
.RE
.PP
\-t, \-\-tid=<tid>
.RS 4
stat events on existing thread id (comma separated list)
.RE
.PP
\-a, \-\-all\-cpus
.RS 4
system\-wide collection from all CPUs
.RE
.PP
\-c, \-\-scale
.RS 4
scale/normalize counter values
.RE
.PP
\-r, \-\-repeat=<n>
.RS 4
repeat command and print average + stddev (max: 100)
.RE
.PP
\-B, \-\-big\-num
.RS 4
print large numbers with thousands\*(Aq separators according to locale
.RE
.PP
\-C, \-\-cpu=
.RS 4
Count only on the list of CPUs provided\&. Multiple CPUs can be provided as a comma\-separated list with no space: 0,1\&. Ranges of CPUs are specified with \-: 0\-2\&. In per\-thread mode, this option is ignored\&. The \-a option is still necessary to activate system\-wide monitoring\&. Default is to count on all CPUs\&.
.RE
.PP
\-A, \-\-no\-aggr
.RS 4
Do not aggregate counts across all monitored CPUs in system\-wide mode (\-a)\&. This option is only valid in system\-wide mode\&.
.RE
.PP
\-n, \-\-null
.RS 4
null run \- don\(cqt start any counters
.RE
.PP
\-v, \-\-verbose
.RS 4
be more verbose (show counter open errors, etc)
.RE
.PP
\-x SEP, \-\-field\-separator SEP
.RS 4
print counts using a CSV\-style output to make it easy to import directly into spreadsheets\&. Columns are separated by the string specified in SEP\&.
.RE
.PP
\-G name, \-\-cgroup name
.RS 4
monitor only in the container (cgroup) called "name"\&. This option is available only in per\-cpu mode\&. The cgroup filesystem must be mounted\&. All threads belonging to container "name" are monitored when they run on the monitored CPUs\&. Multiple cgroups can be provided\&. Each cgroup is applied to the corresponding event, i\&.e\&., first cgroup to first event, second cgroup to second event and so on\&. It is possible to provide an empty cgroup (monitor all the time) using, e\&.g\&., \-G foo,,bar\&. Cgroups must have corresponding events, i\&.e\&., they always refer to events defined earlier on the command line\&.
.RE
.PP
\-o file, \-\-output file
.RS 4
Print the output into the designated file\&.
.RE
.PP
\-\-append
.RS 4
Append to the output file designated with the \-o option\&. Ignored if \-o is not specified\&.
.RE
.PP
\-\-log\-fd
.RS 4
Log output to fd, instead of stderr\&. Complementary to \-\-output, and mutually exclusive with it\&. \-\-append may be used here\&. Examples: 3>results perf stat \-\-log\-fd 3  \(em $cmd 3>>results perf stat \-\-log\-fd 3 \-\-append \(em $cmd
.RE
.PP
\-\-pre, \-\-post
.RS 4
Pre and post measurement hooks, e\&.g\&.:
.RE
.sp
perf stat \-\-repeat 10 \-\-null \-\-sync \-\-pre \fImake \-s O=defconfig\-build/clean\fR \(em make \-s \-j64 O=defconfig\-build/ bzImage
.SH "EXAMPLES"
.sp
$ perf stat \(em make \-j
.sp
.if n \{\
.RS 4
.\}
.nf
Performance counter stats for \*(Aqmake \-j\*(Aq:
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
8117\&.370256  task clock ticks     #      11\&.281 CPU utilization factor
        678  context switches     #       0\&.000 M/sec
        133  CPU migrations       #       0\&.000 M/sec
     235724  pagefaults           #       0\&.029 M/sec
24821162526  CPU cycles           #    3057\&.784 M/sec
18687303457  instructions         #    2302\&.138 M/sec
  172158895  cache references     #      21\&.209 M/sec
   27075259  cache misses         #       3\&.335 M/sec
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Wall\-clock time elapsed:   719\&.554352 msecs
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
\fBperf-top\fR(1), \fBperf-list\fR(1)
