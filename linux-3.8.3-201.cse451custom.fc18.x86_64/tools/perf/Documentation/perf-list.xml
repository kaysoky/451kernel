<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>
<refentry>
<refmeta>
<refentrytitle>perf-list</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class="source">perf</refmiscinfo>
<refmiscinfo class="version"></refmiscinfo>
<refmiscinfo class="manual">perf Manual</refmiscinfo>
</refmeta>
<refnamediv>
  <refname>perf-list</refname>
  <refpurpose>List all symbolic event types</refpurpose>
</refnamediv>
<refsynopsisdiv id="_synopsis">
<blockquote>
<literallayout><emphasis>perf list</emphasis> [hw|sw|cache|tracepoint|event_glob]</literallayout>
</blockquote>
</refsynopsisdiv>
<refsect1 id="_description">
<title>DESCRIPTION</title>
<simpara>This command displays the symbolic event types which can be selected in the
various perf commands with the -e option.</simpara>
</refsect1>
<refsect1 id="EVENT_MODIFIERS">
<title>EVENT MODIFIERS</title>
<simpara>Events can optionally have a modifer by appending a colon and one or
more modifiers. Modifiers allow the user to restrict the events to be
counted. The following modifiers exist:</simpara>
<literallayout class="monospaced">u - user-space counting
k - kernel counting
h - hypervisor counting
G - guest counting (in KVM guests)
H - host counting (not in KVM guests)
p - precise level</literallayout>
<simpara>The <emphasis>p</emphasis> modifier can be used for specifying how precise the instruction
address should be. The <emphasis>p</emphasis> modifier can be specified multiple times:</simpara>
<literallayout class="monospaced">0 - SAMPLE_IP can have arbitrary skid
1 - SAMPLE_IP must have constant skid
2 - SAMPLE_IP requested to have 0 skid
3 - SAMPLE_IP must have 0 skid</literallayout>
<simpara>For Intel systems precise event sampling is implemented with PEBS
which supports up to precise-level 2.</simpara>
<simpara>On AMD systems it is implemented using IBS (up to precise-level 2).
The precise modifier works with event types 0x76 (cpu-cycles, CPU
clocks not halted) and 0xC1 (micro-ops retired). Both events map to
IBS execution sampling (IBS op) with the IBS Op Counter Control bit
(IbsOpCntCtl) set respectively (see AMD64 Architecture Programmer’s
Manual Volume 2: System Programming, 13.3 Instruction-Based
Sampling). Examples to use IBS:</simpara>
<literallayout class="monospaced">perf record -a -e cpu-cycles:p ...    # use ibs op counting cycles
perf record -a -e r076:p ...          # same as -e cpu-cycles:p
perf record -a -e r0C1:p ...          # use ibs op counting micro-ops</literallayout>
</refsect1>
<refsect1 id="_raw_hardware_event_descriptor">
<title>RAW HARDWARE EVENT DESCRIPTOR</title>
<simpara>Even when an event is not available in a symbolic form within perf right now,
it can be encoded in a per processor specific way.</simpara>
<simpara>For instance For x86 CPUs NNN represents the raw register encoding with the
layout of IA32_PERFEVTSELx MSRs (see [Intel® 64 and IA-32 Architectures Software Developer&#8217;s Manual Volume 3B: System Programming Guide] Figure 30-1 Layout
of IA32_PERFEVTSELx MSRs) or AMD&#8217;s PerfEvtSeln (see [AMD64 Architecture Programmer’s Manual Volume 2: System Programming], Page 344,
Figure 13-7 Performance Event-Select Register (PerfEvtSeln)).</simpara>
<simpara>Note: Only the following bit fields can be set in x86 counter
registers: event, umask, edge, inv, cmask. Esp. guest/host only and
OS/user mode flags must be setup using <link linkend="EVENT_MODIFIERS">EVENT MODIFIERS</link>.</simpara>
<simpara>Example:</simpara>
<simpara>If the Intel docs for a QM720 Core i7 describe an event as:</simpara>
<literallayout class="monospaced">Event  Umask  Event Mask
Num.   Value  Mnemonic    Description                        Comment</literallayout>
<literallayout class="monospaced">A8H      01H  LSD.UOPS    Counts the number of micro-ops     Use cmask=1 and
                          delivered by loop stream detector  invert to count
                                                             cycles</literallayout>
<simpara>raw encoding of 0x1A8 can be used:</simpara>
<literallayout class="monospaced">perf stat -e r1a8 -a sleep 1
perf record -e r1a8 ...</literallayout>
<simpara>You should refer to the processor specific documentation for getting these
details. Some of them are referenced in the SEE ALSO section below.</simpara>
</refsect1>
<refsect1 id="_options">
<title>OPTIONS</title>
<simpara>Without options all known events will be listed.</simpara>
<simpara>To limit the list use:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
<emphasis>hw</emphasis> or <emphasis>hardware</emphasis> to list hardware events such as cache-misses, etc.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>sw</emphasis> or <emphasis>software</emphasis> to list software events such as context switches, etc.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>cache</emphasis> or <emphasis>hwcache</emphasis> to list hardware cache events such as L1-dcache-loads, etc.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>tracepoint</emphasis> to list all tracepoint events, alternatively use
  <emphasis>subsys_glob:event_glob</emphasis> to filter by tracepoint subsystems such as sched,
  block, etc.
</simpara>
</listitem>
<listitem>
<simpara>
If none of the above is matched, it will apply the supplied glob to all
  events, printing the ones that match.
</simpara>
</listitem>
</orderedlist>
<simpara>One or more types can be used at the same time, listing the events for the
types specified.</simpara>
</refsect1>
<refsect1 id="_see_also">
<title>SEE ALSO</title>
<simpara><citerefentry>
<refentrytitle>perf-stat</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>, <citerefentry>
<refentrytitle>perf-top</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>,
<citerefentry>
<refentrytitle>perf-record</refentrytitle><manvolnum>1</manvolnum>
</citerefentry>,
<ulink url="http://www.intel.com/Assets/PDF/manual/253669.pdf">Intel® 64 and IA-32 Architectures Software Developer&#8217;s Manual Volume 3B: System Programming Guide</ulink>,
<ulink url="http://support.amd.com/us/Processor_TechDocs/24593_APM_v2.pdf">AMD64 Architecture Programmer’s Manual Volume 2: System Programming</ulink></simpara>
</refsect1>
</refentry>
